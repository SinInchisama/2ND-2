기하학적 모델링

메쉬 : 물체의 외관을 표현하기 위한 연결된 다각형들의 집합  => 삼각형들의 집합 => 육면첸 12개의 삼각형의 집합
다각형 : 연결된 선분들의 집합
선분 : 연결된 점들의 집합  => 점 x,y,z
면 : 메쉬의 각 다각형(폴리곤) 많으면 둥근모양 적으면 각져보이는 모양

직육면체 : 6개면으로 이루어져 있으며, 한번에 최대 3개의 면만 볼 수 있음, 한면은 점4개로 구성
기하학 : 면이 몇개로 물체를 표현하는가


메쉬의 표현
수학적 표현 : 도형의 방정식,그림(도형)		=> 우리는 대부분의 모델은 수학적 표현이 불가능함. 때문에 기하학적으로 표현할려고함.
프로그램에서의 표현  struct Mesh { 폴리곤의 개수	면들의 개수(폴리곤의 집합)}
			srutct Polygon {vertex의 개수	점들의 집합(Vertex)}
			struct Vertex { float x;float y;float z}
좌표계 - 원점,축,축의 방향,단위


렌더링
장면 - 게임 월드 자체 => 객체(메쉬들) 배경,이펙트 등도 포함.

렌더링 - 게임의 울드의 모든 객체들을 그리는것.	=> 모든 객체의 겉모양을 구성하는 모든 폴리곤들을 그리는 것. => 모든 픽셀들을 그리는 것 => 3d 모델 좌표를 2d 화면 좌표로 변환하는 과정 -> 변환(Transformation) : 모양 크기 방향 픽셀의 색상을 결정하는 과정
결과적으로 Transformation와 Lighting으로 나누어 진다고 할 수 있음.


파이프라인

변환 파이프 라인 :  3D 모델 좌표를 2D 화면 좌표로 변환하여 컴퓨텨 화면에 그릴 수 있도록 하는 함수
		3D를 느낄 수 있도록 변환해야함(원근감)
		삼각형은 점3개로 이루어져 있다. 픽셀로 바꿔서 연결을 하면, 색갈을 칠하면 라이팅이 된다
		폴리곤을 구성하는 정점하나를 가지고 4가지 변환을 한다.
		정점 -(월드변환)-> 월드 좌표계 -(카메라 변환)-> 카메라 좌표계 -(투영 변환)-> 투영 좌표계 -(화면 변환)-> 화면 좌표계		원근 투영(3D->2D)	투영좌표계부터 2D좌표.



폴리곤 메쉬	폴리곤은 볼록성과 평면성(다각형내의 모든 점은 같은 평면에 있어야함.)을 가져함.
		Direct3D는 삼각형만 지원.	
		로우 폴리곤할때 렌더링은 적게 들지만 표현하지 못하는 부분이 생길 수도 있다. 따라서 적절한 폴리곤 개수를 예측하는게 중요하다.
		삼각형 mesh보다 quad mesh가 폴리곤이 더 적게 든다.	

		대부분의 폴릭ㄴ 메쉬는 3ds Max같은 소프트웨어로 제작.



폴리곤 메쉬 표현	인덱스 없는 삼각형 리스트
		- 정점 버퍼 : 정점들이 저장되는 메모리에 3개 정점을 순서대로 읽어 1개의 삼각형 생성
		- 단점 : 똑같은 정점 버퍼의 데이터 중복 저장.(데이터가 많아지면 메모리 사용량이 많아진다. Transform할때 똑같은 점에 Transform을 여러번 처리하게 된다 한번만 해도 되는데.

		인덱스 버퍼 
		- 정점 버퍼에 정점을 한번만 저장
		- 삼각형의 3개 인덱스를 인덱스 버퍼에 저장 (정점 버퍼는 정점 위치 뿐만 아니라, 노멀, 텍스쳐 좌표 드옫 저장되므로 인덱스 버퍼 중복이 훨씬 효율적임.)


법선 벡터		-조명 알고리즘에서 물체 표면 법선벡터가 중요 역할(빛이 이동하는 방향과 면이 나타내는 방향으로 보이는지 안보이는지를 구분)