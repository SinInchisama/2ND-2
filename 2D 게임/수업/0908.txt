python 변수선언
ex) pi = 3.1412592, r = 5 등등
영문자와 숫자조합해서 기본 단어를 제외하고 사용할 수 있다.
변수 값은 언제든지 바꿀 수 있다.
☆c언어와 다른점은 자료형을 설정해주지 않아도 된다

☆str에서 c언어와 다른점은 '','' 둘다 상관없이 글을 묶어준다는 것, c언어는 ''는 char ""는 str를 나타낸다.

☆mins = int(mins) => c언어에서는 불가능, 하지만 python문제되지 않는다.
                          	   원래 여기서 mins은 str였지만 저렇게 하면 int로 출력된다.
		
python은 문자열끼리도 비교가 가능함. 숫자뿐만 아니라
ex) 'a'>'b' => False 아스키코드가 큰것으로 비교, 'abc' < 'ABC' => False 아스키코드로 먼저나오는게 True

python은 문자열 끼리 더하거나 곱할 수 있다,
ex) first = 'Seonbin'		
last = 'Kim'				name * 2
name = first + last				'SeonbinKim.SeonbinKim.'

python에는 문자열 배열에 -1를 넣을 수 있다. 그럼 맨뒤에서부터 출력한다.
ex) name[-1]		namne[-2]
     '.'			'm'

배열에 [0:3]을 넣으면 0,1,2까지 출력된다.
위 방법을 slice라고 한다. 잘라낸다는 뜻.
마지막을 출력할려면		name[-3:] 하면된다.
				'im.'
처음부터 끝까지은			name[:]

name[::3] ==> 3까지 step한다는 뜻	결과물 : 'Snnm'   

title[::-1]
'gnimmargorP emaG D2 nohtyp'	=> 뒤로 간다. 거꾸로 간다.


★★문자열 배열부분 어떤 의미를 나타내는지 시험문제로 나옴. 꼭 봐볼거	sliece부분 그대로나옴.



대부분의 자료구조는 집합적인 데이터들을 효과적으로 관리하기위해 틀을 짜는 것이다

list = 여러개의 데이터들의 집합,데이터들이 중요한 순서를 갖고 있는 중복을 허용하는 데이터들
ex) 	ohmygirl = ['hyojeong','senghi','mimi','yooa','jiho','yubin','arin']	
    	ohmygirl.sort()
	ohmygirl['arin', 'hyojeong', 'jiho', 'mimi', 'senghi', 'yooa', 'yubin']	
	
	len(ohmygirl)
	7
	
	unit = twic + ohmygirl
	unit
	['momo', 'sana', 'zwi', 'nayeon', 'dayun', 'arin', 'hyojeong', 'jiho', 'mimi', 'senghi', 'yooa', 'yubin']
	
	unit = twic + ohmygirl
	unit
	['momo', 'sana', 'zwi', 'nayeon', 'dayun', 'arin', 'hyojeong', 'jiho', 'mimi', 'senghi', 'yooa', 'yubin']	

	unitbanana = ohmygirl[:3]
	unitbanana
	['arin', 'hyojeong', 'mimi']

	unitbanana.append('yubin')		// 추가하는 방법
	ohmygirl = ohmygirl + ['jiho']

	'jiho' in ohmygirl
	False
	'yubin' in ohmygirl
	True


key value fair = 단서로 넣어주는 데이터로 원하는 데이터를 찾는 방법.
딕션너리 => key value fair를 사용하는 python 자료구조.
	list는 인덱스를 근거로 딕션너리는 key를 근거로 데이터를 찾아온다

ex)	score = {'arin':99,'hyojeng':94,'mimi':95,'yooa':96,'yubin':97,'senghi':95}
	score['arin']
	99

	score['jiho']=97
	score['jiho']
	97

	'jini' in score
	False
	'jiho' in score
	True


Tuple
여러 개의 값을 동시에 관리 리스트와 유사하나 리스트는 자유롭게 값을 변경할 수 있지만, Tuple은 값을 변경할 수 없다.
따라서 상수데이터라도 함.
t2 = (1,)로 하지않으면 Tuple로 인식하지않음 ex) t2 = (1) => int	t2 = (1,) => Tuple

ex) 
t1 = (1,2,3)
t2 = (1,)
t3 = ()
t4 = 1,2,3,4			=> 전부다 Tuple로 인식
t5(1,'a','park',(1,2))			=> Tuple내에 숫자, 문자, Tuple도 올 수 있음.